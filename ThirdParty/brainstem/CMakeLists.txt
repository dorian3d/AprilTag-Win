if (APPLE)
  find_library(OBJC objc)
  find_library(COREFOUNDATION CoreFoundation)
  find_library(IOKIT IOKit)
  find_library(BRAINSTEM2_LIBRARY BrainStem2 NO_DEFAULT_PATH PATHS lib/mac)
elseif (WIN32 AND CMAKE_SIZEOF_VOID_P EQUAL 8)
  find_library(BRAINSTEM2_LIBRARY BrainStem2 NO_DEFAULT_PATH PATHS lib/x64)
elseif (WIN32 AND CMAKE_SIZEOF_VOID_P EQUAL 4)
  find_library(BRAINSTEM2_LIBRARY BrainStem2 NO_DEFAULT_PATH PATHS lib/w32)
else(UNIX)
  find_library(BRAINSTEM2_LIBRARY BrainStem2 NO_DEFAULT_PATH PATHS lib/linux)
endif()
find_package(Threads REQUIRED)
include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(BrainStem2 DEFAULT_MSG BRAINSTEM2_LIBRARY)
if(BRAINSTEM2_FOUND AND NOT TARGET BrainStem2)
  add_library(BrainStem2 INTERFACE)
  target_include_directories(BrainStem2 INTERFACE include)
  target_link_libraries(BrainStem2 INTERFACE ${BRAINSTEM2_LIBRARY} ${COREFOUNDATION} ${IOKIT} ${OBJC} Threads::Threads)
endif()
