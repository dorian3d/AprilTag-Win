apply plugin: 'com.android.model.application'

model {
    android {
        compileSdkVersion = 21
        buildToolsVersion = "22.0.1"
        defaultConfig.with {
            applicationId = "com.realitycap.android.rcutility"
            minSdkVersion.apiLevel = 21
            targetSdkVersion.apiLevel = 21
            version = 1
        }
    }
    android.lintOptions {
        abortOnError = false
    }
    android.ndk {
        moduleName = "tracker_wrapper"
        cppFlags += "-I" + file("../../../corvis/src/filter")
        ldLibs += ["tracker", "log"]
    }
    android.buildTypes {
        release {
            isMinifyEnabled = false
            proguardFiles += file('proguard-rules.pro')
        }
        debug {
            isMinifyEnabled = false
            proguardFiles += file('proguard-rules.pro')
            isDebuggable = true
            isJniDebuggable = true
        }
    }
    android.productFlavors {
        create("rc86") {
            ndk.abiFilters += "x86"
            ndk.ldFlags  += "-L" + file("build-x86")
        }
        create("rc64") {
            ndk.abiFilters += "x86_64"
            ndk.ldFlags  += "-L" + file("build-x64")
        }
    }
}

tasks.all { task ->
    if (task.name.contains('Arm') ||
        task.name.contains('Mips') ||
        task.name.contains('Rc64') && !task.name.contains('_64') && task.name.contains('86') ||
        task.name.contains('Rc86') &&  task.name.contains('_64'))
        task.enabled = false
}

def rsRoot = "$System.env.RSSDK"
dependencies {
    compile 'com.android.support:support-v13:22.2.0'
    // TODO: not all of these are necessary
    compile files (
            rsRoot + '/libs/PXCACommon_x86.jar',
            rsRoot + '/libs/OpenCL_x86.jar',
            rsRoot + '/libs/PXCAScenePerception_x86.jar',
            rsRoot + '/libs/PXCAPlayback_Camera_x86.jar',
            rsRoot + '/libs/SP_Core_x86.jar',
            rsRoot + '/libs/c++_shared_x86.jar',
            rsRoot + '/libs/cilkrts_x86.jar',
            rsRoot + '/libs/metaioTracker_x86.jar',
            rsRoot + '/libs/PXCACommon.jar',
            rsRoot + '/libs/PXCASenseManager.jar',
            rsRoot + '/libs/PXCAPlayback.jar',
            rsRoot + '/libs/PXCAScenePerception.jar'
    ).each { assert it.exists() : "$it: Not found\nSet RSSDK (currently $rsRoot)" }
}
